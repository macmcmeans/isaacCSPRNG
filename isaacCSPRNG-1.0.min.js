/*//////////////////////////////////////////
isaacCSPRNG 1.0
////////////////////////////////////////////
Copyright (c) 2017, William P. "Mac" McMeans
LICENSE: BSD 3-Clause License
https://github.com/macmcmeans/isaacCSPRNG/blob/master/isaacCSPRNG-1.0.min.js
//////////////////////////////////////////*/
isaacCSPRNG = function(r) {
    return function(r) {
        "use strict";
        function n(r, n) {
            var t = (65535 & r) + (65535 & n);
            return (r >>> 16) + (n >>> 16) + (t >>> 16) << 16 | 65535 & t;
        }
        function t(r) {
            var n, t = r.match(/.{1,4}/g) || [], e = "";
            for (n = 0; n < t.length; n++) e += String.fromCharCode(parseInt(t[n], 16));
            return e;
        }
        function e(r) {
            var n, t, e = "";
            for (t = 0; t < r.length; t++) n = r.charCodeAt(t).toString(16), e += ("000" + n).slice(-4);
            return e;
        }
        function o() {
            return {
                a: N,
                b: k,
                c: M,
                m: S,
                r: I,
                g: J
            };
        }
        function u(r) {
            return parseInt(r) === r;
        }
        function a(r) {
            for (var n, t, e, o = [], u = [], a = 0, f = r + "\0\0\0", i = f.length - 1; a < i; ) n = f.charCodeAt(a++), 
            t = f.charCodeAt(a + 1), n < 128 ? o.push(n) : n < 2048 ? (o.push(n >>> 6 & 31 | 192), 
            o.push(n >>> 0 & 63 | 128)) : 55296 != (63488 & n) ? (o.push(n >>> 12 & 15 | 224), 
            o.push(n >>> 6 & 63 | 128), o.push(n >>> 0 & 63 | 128)) : 55296 == (64512 & n) && 56320 == (64512 & t) && (e = 65536 + (63 & t | (63 & n) << 10), 
            o.push(e >>> 18 & 7 | 240), o.push(e >>> 12 & 63 | 128), o.push(e >>> 6 & 63 | 128), 
            o.push(e >>> 0 & 63 | 128), a++), o.length > 3 && u.push(o.shift() << 0 | o.shift() << 8 | o.shift() << 16 | o.shift() << 24);
            return u;
        }
        function f(r) {
            for (var n = "", t = 0; t < r.length; t++) {
                var e = m(33, 126);
                n += String.fromCharCode(e ^ r.charCodeAt(t));
            }
            return n;
        }
        function i(r) {
            for (var n = new Array(r), t = 0; t < r; t++) n[t] = m(255);
            return n;
        }
        function c(r) {
            for (var n = " !#$%&()*+,-.0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[]^_`abcdefghijklmnopqrstuvwxyz{|}~", t = "", e = 0; e < r; e++) t += n[m(0, n.length - 1)];
            return t;
        }
        function h(r, n, e) {
            return A(r), f(1 === Number(e) ? t(n) : n);
        }
        function s() {
            return l() + 1.1102230246251565e-16 * (2097152 * l() | 0);
        }
        function p(r, n, t) {
            return A(r), 1 === Number(t) ? e(f(n)) : f(n);
        }
        function g() {
            return JSON.stringify(o());
        }
        function v() {
            var r = d();
            return r < 0 ? -r : r;
        }
        function b(r) {
            var t, e, o;
            for (r = r && "number" == typeof r ? Math.abs(Math.floor(r)) : 1; r--; ) for (M = n(M, 1), 
            k = n(k, M), t = 0; t < 256; t++) {
                switch (3 & t) {
                  case 0:
                    N ^= N << 13;
                    break;

                  case 1:
                    N ^= N >>> 6;
                    break;

                  case 2:
                    N ^= N << 2;
                    break;

                  case 3:
                    N ^= N >>> 16;
                }
                N = n(S[t + 128 & 255], N), e = S[t], S[t] = o = n(S[e >>> 2 & 255], n(N, k)), I[t] = k = n(S[o >>> 10 & 255], e);
            }
        }
        function d() {
            return J-- || (b(), J = 255), I[J];
        }
        function l() {
            return .5 + 2.3283064365386963e-10 * d();
        }
        function m() {
            var r, n;
            return 1 === arguments.length ? (r = 0, n = arguments[0]) : (r = arguments[0], n = arguments[1]), 
            arguments[0] > arguments[1] && (r = arguments[1], n = arguments[0]), u(r) && u(n) ? Math.floor(l() * (n - r + 1)) + r : l() * (n - r) + r;
        }
        function y() {
            N = k = M = 0;
            for (var r = 0; r < 256; ++r) S[r] = I[r] = 0;
            J = 0;
        }
        function A(r) {
            function t() {
                e ^= o << 11, f = n(f, e), o = n(o, u), o ^= u >>> 2, i = n(i, o), u = n(u, f), 
                u ^= f << 8, c = n(c, u), f = n(f, i), f ^= i >>> 16, h = n(h, f), i = n(i, c), 
                i ^= c << 10, s = n(s, i), c = n(c, h), c ^= h >>> 4, e = n(e, c), h = n(h, s), 
                h ^= s << 8, o = n(o, h), s = n(s, e), s ^= e >>> 9, u = n(u, s), e = n(e, o);
            }
            var e, o, u, f, i, c, h, s, p;
            if (e = o = u = f = i = c = h = s = 2654435769, r && "string" == typeof r && (r = a(r)), 
            r && "number" == typeof r && (r = [ r ]), r instanceof Array) for (y(), p = 0; p < r.length; p++) I[255 & p] += "number" == typeof r[p] ? r[p] : 0;
            for (p = 0; p < 4; p++) t();
            for (p = 0; p < 256; p += 8) r && (e = n(e, I[p + 0]), o = n(o, I[p + 1]), u = n(u, I[p + 2]), 
            f = n(f, I[p + 3]), i = n(i, I[p + 4]), c = n(c, I[p + 5]), h = n(h, I[p + 6]), 
            s = n(s, I[p + 7])), t(), S[p + 0] = e, S[p + 1] = o, S[p + 2] = u, S[p + 3] = f, 
            S[p + 4] = i, S[p + 5] = c, S[p + 6] = h, S[p + 7] = s;
            if (r) for (p = 0; p < 256; p += 8) e = n(e, S[p + 0]), o = n(o, S[p + 1]), u = n(u, S[p + 2]), 
            f = n(f, S[p + 3]), i = n(i, S[p + 4]), c = n(c, S[p + 5]), h = n(h, S[p + 6]), 
            s = n(s, S[p + 7]), t(), S[p + 0] = e, S[p + 1] = o, S[p + 2] = u, S[p + 3] = f, 
            S[p + 4] = i, S[p + 5] = c, S[p + 6] = h, S[p + 7] = s;
            b(), J = 256;
        }
        function C(r) {
            var n = JSON.parse(r);
            N = n.a, k = n.b, M = n.c, S = n.m, I = n.r, J = n.g;
        }
        var w, S = new Array(256), N = 0, k = 0, M = 0, I = new Array(256), J = 0, O = new Uint32Array(2), R = new Array();
        return window.crypto.getRandomValues(O), R = O[0] + O[1], w = r || R, A(w), {
            bytes: i,
            chars: c,
            decipher: h,
            double: s,
            encipher: p,
            export: g,
            import: C,
            int32: v,
            prng: b,
            rand: d,
            range: m,
            random: l,
            reset: y,
            seed: A
        };
    }(r);
};
